#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CM.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CAFETERIAMANAGEMENT")]
	public partial class CMDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPRODUCT(PRODUCT instance);
    partial void UpdatePRODUCT(PRODUCT instance);
    partial void DeletePRODUCT(PRODUCT instance);
    partial void InsertPRODUCTTYPE(PRODUCTTYPE instance);
    partial void UpdatePRODUCTTYPE(PRODUCTTYPE instance);
    partial void DeletePRODUCTTYPE(PRODUCTTYPE instance);
    #endregion
		
		public CMDataContext() : 
				base(global::CM.DAL.Properties.Settings.Default.CAFETERIAMANAGEMENTConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CMDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CMDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CMDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CMDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PRODUCT> PRODUCTs
		{
			get
			{
				return this.GetTable<PRODUCT>();
			}
		}
		
		public System.Data.Linq.Table<PRODUCTTYPE> PRODUCTTYPEs
		{
			get
			{
				return this.GetTable<PRODUCTTYPE>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PRODUCT")]
	public partial class PRODUCT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PRODID;
		
		private string _PRODNAME;
		
		private string _PRODTYPE;
		
		private System.Nullable<decimal> _PRICE;
		
		private string _PRODDESCR;
		
		private System.Nullable<bool> _ISTOPPING;
		
		private EntityRef<PRODUCTTYPE> _PRODUCTTYPE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPRODIDChanging(string value);
    partial void OnPRODIDChanged();
    partial void OnPRODNAMEChanging(string value);
    partial void OnPRODNAMEChanged();
    partial void OnPRODTYPEChanging(string value);
    partial void OnPRODTYPEChanged();
    partial void OnPRICEChanging(System.Nullable<decimal> value);
    partial void OnPRICEChanged();
    partial void OnPRODDESCRChanging(string value);
    partial void OnPRODDESCRChanged();
    partial void OnISTOPPINGChanging(System.Nullable<bool> value);
    partial void OnISTOPPINGChanged();
    #endregion
		
		public PRODUCT()
		{
			this._PRODUCTTYPE = default(EntityRef<PRODUCTTYPE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODID", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PRODID
		{
			get
			{
				return this._PRODID;
			}
			set
			{
				if ((this._PRODID != value))
				{
					this.OnPRODIDChanging(value);
					this.SendPropertyChanging();
					this._PRODID = value;
					this.SendPropertyChanged("PRODID");
					this.OnPRODIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODNAME", DbType="VarChar(30)")]
		public string PRODNAME
		{
			get
			{
				return this._PRODNAME;
			}
			set
			{
				if ((this._PRODNAME != value))
				{
					this.OnPRODNAMEChanging(value);
					this.SendPropertyChanging();
					this._PRODNAME = value;
					this.SendPropertyChanged("PRODNAME");
					this.OnPRODNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODTYPE", DbType="Char(5)")]
		public string PRODTYPE
		{
			get
			{
				return this._PRODTYPE;
			}
			set
			{
				if ((this._PRODTYPE != value))
				{
					if (this._PRODUCTTYPE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPRODTYPEChanging(value);
					this.SendPropertyChanging();
					this._PRODTYPE = value;
					this.SendPropertyChanged("PRODTYPE");
					this.OnPRODTYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRICE", DbType="Money")]
		public System.Nullable<decimal> PRICE
		{
			get
			{
				return this._PRICE;
			}
			set
			{
				if ((this._PRICE != value))
				{
					this.OnPRICEChanging(value);
					this.SendPropertyChanging();
					this._PRICE = value;
					this.SendPropertyChanged("PRICE");
					this.OnPRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODDESCR", DbType="VarChar(50)")]
		public string PRODDESCR
		{
			get
			{
				return this._PRODDESCR;
			}
			set
			{
				if ((this._PRODDESCR != value))
				{
					this.OnPRODDESCRChanging(value);
					this.SendPropertyChanging();
					this._PRODDESCR = value;
					this.SendPropertyChanged("PRODDESCR");
					this.OnPRODDESCRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISTOPPING", DbType="Bit")]
		public System.Nullable<bool> ISTOPPING
		{
			get
			{
				return this._ISTOPPING;
			}
			set
			{
				if ((this._ISTOPPING != value))
				{
					this.OnISTOPPINGChanging(value);
					this.SendPropertyChanging();
					this._ISTOPPING = value;
					this.SendPropertyChanged("ISTOPPING");
					this.OnISTOPPINGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCTTYPE_PRODUCT", Storage="_PRODUCTTYPE", ThisKey="PRODTYPE", OtherKey="TYPEID", IsForeignKey=true)]
		public PRODUCTTYPE PRODUCTTYPE
		{
			get
			{
				return this._PRODUCTTYPE.Entity;
			}
			set
			{
				PRODUCTTYPE previousValue = this._PRODUCTTYPE.Entity;
				if (((previousValue != value) 
							|| (this._PRODUCTTYPE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRODUCTTYPE.Entity = null;
						previousValue.PRODUCTs.Remove(this);
					}
					this._PRODUCTTYPE.Entity = value;
					if ((value != null))
					{
						value.PRODUCTs.Add(this);
						this._PRODTYPE = value.TYPEID;
					}
					else
					{
						this._PRODTYPE = default(string);
					}
					this.SendPropertyChanged("PRODUCTTYPE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PRODUCTTYPE")]
	public partial class PRODUCTTYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TYPEID;
		
		private string _TYPENAME;
		
		private EntitySet<PRODUCT> _PRODUCTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTYPEIDChanging(string value);
    partial void OnTYPEIDChanged();
    partial void OnTYPENAMEChanging(string value);
    partial void OnTYPENAMEChanged();
    #endregion
		
		public PRODUCTTYPE()
		{
			this._PRODUCTs = new EntitySet<PRODUCT>(new Action<PRODUCT>(this.attach_PRODUCTs), new Action<PRODUCT>(this.detach_PRODUCTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYPEID", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TYPEID
		{
			get
			{
				return this._TYPEID;
			}
			set
			{
				if ((this._TYPEID != value))
				{
					this.OnTYPEIDChanging(value);
					this.SendPropertyChanging();
					this._TYPEID = value;
					this.SendPropertyChanged("TYPEID");
					this.OnTYPEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYPENAME", DbType="VarChar(20)")]
		public string TYPENAME
		{
			get
			{
				return this._TYPENAME;
			}
			set
			{
				if ((this._TYPENAME != value))
				{
					this.OnTYPENAMEChanging(value);
					this.SendPropertyChanging();
					this._TYPENAME = value;
					this.SendPropertyChanged("TYPENAME");
					this.OnTYPENAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCTTYPE_PRODUCT", Storage="_PRODUCTs", ThisKey="TYPEID", OtherKey="PRODTYPE")]
		public EntitySet<PRODUCT> PRODUCTs
		{
			get
			{
				return this._PRODUCTs;
			}
			set
			{
				this._PRODUCTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRODUCTs(PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCTTYPE = this;
		}
		
		private void detach_PRODUCTs(PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCTTYPE = null;
		}
	}
}
#pragma warning restore 1591
